@use "0_tools/globals" as *;

// The Box object simply boxes off content.
// Adapted from Inuit CSS
// @link https://github.com/inuitcss/objects.box/blob/master/_objects.box.scss
//
// --o-box-spacer-default: set this in the root to override for all.

// Box Object: Default Spacing unit
$o-box-spacer: 1rem !default; // This is 1em at default.
// Box Object: Tiny Spacing unit
$o-box-spacer--tiny: $o-box-spacer / 4 !default;
// Box Object: Small Spacing unit
$o-box-spacer--small: $o-box-spacer / 2 !default;
// Box Object: Large Spacing unit
$o-box-spacer--large: $o-box-spacer * 2 !default;
// Box Object: Huge Spacing unit
$o-box-spacer--huge: $o-box-spacer * 4 !default;

// Enable or disable object classes

// Box Object: Enable the `flush` modifier class
$o-box-enable--flush: false !default;
// Box Object: Enable the `tiny` modifier class
$o-box-enable--tiny: false !default;
// Box Object: Enable the `small` modifier class
$o-box-enable--small: false !default;
// Box Object: Enable the `large` modifier class
$o-box-enable--large: false !default;
// Box Object: Enable the `huge` modifier class
$o-box-enable--huge: false !default;

// Box Object: The box object simply boxes off content.
//
// @param {boolean} $modifiers - print modifier classes.
@mixin o-box($modifiers: true) {
  --o-box-spacer: var(--o-box-spacer-default, #{$o-box-spacer});
  @include clearfix();
  display: block; // So we can apply the `.o-box` class to naturally-inline elements.
  padding: var(--o-box-spacer);

  > :last-child {
    margin-bottom: 0;
  }

  // Create modifier to classes.
  @if ($modifiers == true) {
    @if ($o-box-enable--flush == true) {
      &--flush {
        @include o-box--flush();
      }
    }

    @if ($o-box-enable--tiny == true) {
      &--tiny {
        @include o-box--tiny();
      }
    }

    @if ($o-box-enable--small == true) {
      &--small {
        @include o-box--small();
      }
    }

    @if ($o-box-enable--large == true) {
      &--large {
        @include o-box--large();
      }
    }

    @if ($o-box-enable--huge == true) {
      &--huge {
        @include o-box--huge();
      }
    }
  }
}

// Box Object: Flush `Modifier`
//
// Removes all padding from the box.
@mixin o-box--flush() {
  --o-box-spacer: 0;
}

// Box Object: Tiny box
@mixin o-box--tiny() {
  --o-box-spacer: #{$o-box-spacer--tiny};
}

// Box Object: Small box
@mixin o-box--small() {
  --o-box-spacer: #{$o-box-spacer--small};
}

// Box Object: Large box
@mixin o-box--large() {
  @include breakpoint($bp-medium--up) {
    --o-box-spacer: #{$o-box-spacer--large};
  }
}

// Box Object: Huge box
@mixin o-box--huge() {
  @include breakpoint($bp-medium--up) {
    --o-box-spacer: #{$o-box-spacer--huge};
  }
}

// Render the class.
.o-box {
  @include o-box();
}
